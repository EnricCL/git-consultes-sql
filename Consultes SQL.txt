1.1.3 Consultas sobre una tabla

1. SELECT nombre FROM producto 

2. SELECT nombre, precio FROM producto 

3. SELECT * FROM producto

4. SELECT nombre, precio, precio*1.10 FROM producto 

5. SELECT nombre AS "nombre de producto", precio AS "euros", precio*1.10 AS "dólares" FROM producto

6. SELECT UPPER(nombre) , precio FROM producto

7. SELECT LOWER(nombre) , precio FROM producto

8. SELECT nombre, UPPER(SUBSTR(nombre, 1,2)) FROM fabricante

9. SELECT nombre, ROUND(precio, 0) FROM producto

10. SELECT nombre, TRUNCATE(precio, 0) FROM producto

11. SELECT producto.codigo_fabricante FROM fabricante, producto WHERE fabricante.codigo = producto.codigo_fabricante 

12. SELECT DISTINCT(producto.codigo_fabricante) FROM fabricante, producto WHERE fabricante.codigo = producto.codigo_fabricante 

13. SELECT nombre FROM fabricante ORDER BY nombre ASC 

14. SELECT nombre FROM fabricante ORDER BY nombre DESC 

15. SELECT nombre, precio FROM producto ORDER BY nombre ASC, precio DESC

16. SELECT * FROM fabricante LIMIT 5

17. SELECT * FROM fabricante LIMIT 3 OFFSET 3

18. SELECT nombre, precio FROM producto ORDER BY precio ASC LIMIT 1

19. SELECT nombre, precio FROM producto ORDER BY precio DESC LIMIT 1

20. SELECT producto.nombre FROM producto WHERE codigo_fabricante = 2 

21. SELECT nombre FROM producto WHERE precio <= 120

22. SELECT nombre FROM producto WHERE precio >= 400

23. SELECT nombre FROM producto WHERE NOT precio >= 400

24. SELECT nombre FROM producto WHERE precio >= 80 AND precio <= 300

25. SELECT nombre FROM producto WHERE precio BETWEEN 60 AND 200

26. SELECT nombre FROM producto WHERE precio > 200 AND codigo_fabricante = 6

27. SELECT nombre FROM producto WHERE codigo_fabricante = 1 OR codigo_fabricante = 3 OR codigo_fabricante = 5

28. SELECT nombre FROM producto WHERE codigo_fabricante IN ('1','3','5')

29. SELECT nombre, precio*100 AS "céntimos" FROM producto 

30. SELECT nombre FROM fabricante WHERE nombre LIKE 'S%'

31. SELECT nombre FROM fabricante WHERE nombre LIKE '%e'

32. SELECT nombre FROM fabricante WHERE nombre LIKE '%w%'

33. SELECT nombre FROM fabricante WHERE nombre LIKE '____'

34. SELECT nombre FROM producto WHERE nombre LIKE '%Portátil%'

35. SELECT nombre FROM producto WHERE nombre LIKE '%Monitor%' AND precio < 215

36. SELECT nombre, precio FROM producto WHERE precio >= 180 ORDER BY precio DESC, nombre ASC

1.1.4 Consultas multitabla (Composición interna)

1. SELECT producto.nombre, producto.precio, fabricante.nombre FROM producto, fabricante WHERE producto.codigo_fabricante = fabricante.codigo

2. SELECT producto.nombre, producto.precio, fabricante.nombre FROM producto, fabricante WHERE producto.codigo_fabricante = fabricante.codigo ORDER BY fabricante.nombre ASC

3. SELECT producto.codigo, producto.nombre, producto.codigo_fabricante, fabricante.nombre FROM producto, fabricante WHERE producto.codigo_fabricante = fabricante.codigo

4. SELECT producto.nombre, producto.precio, fabricante.nombre FROM producto, fabricante WHERE producto.codigo_fabricante = fabricante.codigo ORDER BY precio ASC LIMIT 1

5. SELECT producto.nombre, producto.precio, fabricante.nombre FROM producto, fabricante WHERE producto.codigo_fabricante = fabricante.codigo ORDER BY precio DESC LIMIT 1

6. SELECT producto.nombre FROM producto, fabricante WHERE producto.codigo_fabricante = fabricante.codigo AND fabricante.nombre LIKE 'Lenovo'

7. SELECT producto.nombre FROM producto, fabricante WHERE producto.codigo_fabricante = fabricante.codigo AND fabricante.nombre LIKE 'Crucial' AND producto.precio > 200

8. SELECT producto.nombre FROM producto, fabricante WHERE producto.codigo_fabricante = fabricante.codigo AND (fabricante.nombre LIKE 'Asus' OR fabricante.nombre LIKE 'Hewlett-Packard' OR fabricante.nombre LIKE 'Seagate')

9. SELECT producto.nombre FROM producto, fabricante WHERE producto.codigo_fabricante = fabricante.codigo AND fabricante.nombre IN ('Asus','Hewlett-Packard','Seagate')

10. SELECT producto.nombre , producto.precio FROM producto, fabricante WHERE producto.codigo_fabricante = fabricante.codigo AND fabricante.nombre LIKE '%e'

11. SELECT producto.nombre , producto.precio FROM producto, fabricante WHERE producto.codigo_fabricante = fabricante.codigo AND fabricante.nombre LIKE '%w%'

12. SELECT producto.nombre , producto.precio , fabricante.nombre FROM producto, fabricante WHERE producto.codigo_fabricante = fabricante.codigo AND producto.precio >= 180 ORDER BY producto.precio DESC, producto.nombre ASC

13. SELECT DISTINCT(fabricante.codigo) , fabricante.nombre FROM producto, fabricante WHERE producto.codigo_fabricante = fabricante.codigo

1.1.5 Consultas multitabla (Composición externa)

1. SELECT fabricante.nombre , producto.nombre FROM fabricante LEFT JOIN producto ON fabricante.codigo = producto.codigo_fabricante  

2. SELECT fabricante.nombre , producto.nombre FROM fabricante LEFT JOIN producto ON fabricante.codigo = producto.codigo_fabricante WHERE producto.nombre IS NULL 

3. No, no pueden existir productos sin relacionarse con un fabricante, debido que en la tabla de producto, todos los productos tienen asociado un codigo_fabricante relacionado con el codigo id de la tabla fabricante.
Si se intenta hacer una sentencia parecida a las dos anteriores pero adaptada para que sacara productos sin fabricante, igualmente no se obtiene ningún resultado, debido a lo mismo explicado.

1.1.6 Consultas resumen

1. SELECT COUNT(nombre) FROM producto

2. SELECT COUNT(nombre) FROM fabricante

3. SELECT COUNT(DISTINCT codigo_fabricante) FROM producto

4. SELECT AVG(precio) from producto

5. SELECT MIN(precio) from producto

6. SELECT MAX(precio) from producto

7. SELECT nombre , precio FROM producto WHERE precio = (SELECT MIN(precio) FROM producto) 

8. SELECT nombre , precio FROM producto WHERE precio = (SELECT MAX(precio) FROM producto)

9. SELECT SUM(precio) FROM producto

10. SELECT COUNT(producto.nombre) FROM producto, fabricante WHERE producto.codigo_fabricante = fabricante.codigo AND fabricante.nombre LIKE 'Asus'

11. SELECT AVG(producto.precio) FROM producto, fabricante WHERE producto.codigo_fabricante = fabricante.codigo AND fabricante.nombre LIKE 'Asus'

12. SELECT MIN(producto.precio) FROM producto, fabricante WHERE producto.codigo_fabricante = fabricante.codigo AND fabricante.nombre LIKE 'Asus'

13. SELECT MAX(producto.precio) FROM producto, fabricante WHERE producto.codigo_fabricante = fabricante.codigo AND fabricante.nombre LIKE 'Asus'

14. SELECT SUM(producto.precio) FROM producto, fabricante WHERE producto.codigo_fabricante = fabricante.codigo AND fabricante.nombre LIKE 'Asus'

15. SELECT MAX(producto.precio) , MIN(producto.precio), AVG(producto.precio), COUNT(producto.nombre) FROM producto, fabricante WHERE producto.codigo_fabricante = fabricante.codigo AND fabricante.nombre LIKE 'Crucial'

16. SELECT fabricante.nombre , COUNT(producto.nombre)FROM fabricante LEFT JOIN producto ON producto.codigo_fabricante = fabricante.codigo GROUP BY fabricante.nombre ORDER BY producto.nombre DESC 

17. SELECT fabricante.nombre , MAX(producto.precio), MIN(producto.precio), AVG(producto.precio), COUNT(producto.nombre) FROM fabricante, producto WHERE producto.codigo_fabricante = fabricante.codigo GROUP BY fabricante.nombre 

18. SELECT fabricante.codigo , MAX(producto.precio), MIN(producto.precio), AVG(producto.precio), COUNT(producto.nombre) FROM fabricante, producto WHERE producto.codigo_fabricante = fabricante.codigo GROUP BY fabricante.codigo HAVING AVG(producto.precio) > 200 

19. SELECT fabricante.nombre , MAX(producto.precio), MIN(producto.precio), AVG(producto.precio), COUNT(producto.nombre) FROM fabricante, producto WHERE producto.codigo_fabricante = fabricante.codigo GROUP BY fabricante.nombre HAVING AVG(producto.precio) > 200 

20. SELECT COUNT(producto.nombre) FROM producto WHERE precio >= 180

21. SELECT COUNT(producto.nombre) , fabricante.nombre FROM producto, fabricante WHERE producto.codigo_fabricante = fabricante.codigo AND producto.precio >= 180 GROUP BY fabricante.nombre

22. SELECT AVG(producto.precio) , fabricante.codigo FROM producto, fabricante WHERE producto.codigo_fabricante = fabricante.codigo GROUP BY fabricante.codigo

23. SELECT AVG(producto.precio) , fabricante.nombre FROM producto, fabricante WHERE producto.codigo_fabricante = fabricante.codigo GROUP BY fabricante.nombre

24. SELECT fabricante.nombre FROM producto, fabricante WHERE producto.codigo_fabricante = fabricante.codigo GROUP BY fabricante.nombre HAVING AVG(producto.precio) >= 150 

25. SELECT fabricante.nombre FROM producto, fabricante WHERE producto.codigo_fabricante = fabricante.codigo GROUP BY fabricante.nombre HAVING COUNT(producto.nombre) >= 2

26. SELECT fabricante.nombre , COUNT(producto.nombre) FROM producto, fabricante WHERE producto.codigo_fabricante = fabricante.codigo AND producto.precio >= 220 GROUP BY fabricante.nombre 

27. SELECT (fabricante.nombre) , COUNT(producto.nombre) AS "total" FROM fabricante LEFT JOIN producto ON fabricante.codigo = producto.codigo_fabricante WHERE producto.precio >= 220 OR producto.nombre IS NULL GROUP BY fabricante.nombre
UNION

SELECT (fabricante.nombre) , COUNT(producto.nombre) = 0 FROM fabricante ,  producto WHERE fabricante.codigo = producto.codigo_fabricante AND fabricante.codigo <> ALL (
    SELECT fabricante.codigo FROM fabricante LEFT JOIN producto ON fabricante.codigo = producto.codigo_fabricante WHERE producto.precio >= 220 OR producto.nombre IS NULL GROUP BY fabricante.nombre
)GROUP BY fabricante.nombre ORDER BY total DESC , nombre DESC

28. SELECT fabricante.nombre , SUM(producto.precio) FROM producto, fabricante WHERE producto.codigo_fabricante = fabricante.codigo GROUP BY fabricante.nombre HAVING SUM(producto.precio) > 1000

1.1.7 Subconsultas (En la cláusula WHERE)

1.1.7.1 Con operadores básicos de comparación

1. SELECT producto.nombre FROM producto, fabricante WHERE producto.codigo_fabricante = fabricante.codigo AND fabricante.nombre LIKE 'Lenovo'

2. SELECT producto.codigo, producto.nombre, producto.precio, producto.codigo_fabricante FROM producto, fabricante WHERE producto.codigo_fabricante = fabricante.codigo AND producto.precio = (SELECT MAX(producto.precio) FROM producto, fabricante WHERE producto.codigo_fabricante = fabricante.codigo AND fabricante.nombre LIKE 'Lenovo')

3. SELECT producto.nombre FROM producto, fabricante WHERE producto.codigo_fabricante = fabricante.codigo AND producto.precio = (SELECT MAX(producto.precio) FROM producto, fabricante WHERE producto.codigo_fabricante = fabricante.codigo AND fabricante.nombre LIKE 'Lenovo')

4. SELECT producto.nombre FROM producto, fabricante WHERE producto.codigo_fabricante = fabricante.codigo AND producto.precio = (SELECT MIN(producto.precio) FROM producto, fabricante WHERE producto.codigo_fabricante = fabricante.codigo AND fabricante.nombre LIKE 'Hewlett-Packard')

5. SELECT producto.nombre FROM producto, fabricante WHERE producto.codigo_fabricante = fabricante.codigo AND producto.precio >= (SELECT MAX(producto.precio) FROM producto, fabricante WHERE producto.codigo_fabricante = fabricante.codigo AND fabricante.nombre LIKE 'Lenovo')

6. SELECT producto.nombre FROM producto, fabricante WHERE producto.codigo_fabricante = fabricante.codigo AND fabricante.nombre LIKE 'Asus' AND producto.precio > (SELECT AVG(producto.precio) FROM producto.precio WHERE producto.codigo_fabricante = fabricante.codigo AND fabricante.nombre LIKE 'Asus')

1.1.7.2 Subconsultas con ALL y ANY

8. SELECT producto.nombre , producto.precio FROM producto WHERE producto.precio >= ALL ( SELECT producto.precio FROM producto)

9. SELECT producto.nombre , producto.precio FROM producto WHERE producto.precio <= ALL ( SELECT producto.precio FROM producto)

10. SELECT DISTINCT(fabricante.nombre) FROM fabricante WHERE fabricante.codigo = ANY (SELECT DISTINCT(producto.codigo_fabricante) FROM producto)

11. SELECT DISTINCT(fabricante.nombre) FROM fabricante WHERE fabricante.codigo <> ALL (SELECT DISTINCT(producto.codigo_fabricante) FROM producto)

1.1.7.3 Subconsultas con IN y NOT IN

12. SELECT DISTINCT(fabricante.nombre) FROM fabricante WHERE fabricante.codigo IN (SELECT DISTINCT(producto.codigo_fabricante) FROM producto)

13. SELECT DISTINCT(fabricante.nombre) FROM fabricante WHERE fabricante.codigo NOT IN (SELECT DISTINCT(producto.codigo_fabricante) FROM producto)

1.1.7.4 Subconsultas con EXISTS y NOT EXISTS

14. SELECT DISTINCT(fabricante.nombre) FROM fabricante WHERE EXISTS (SELECT * FROM producto WHERE producto.codigo_fabricante = fabricante.codigo)

15. SELECT DISTINCT(fabricante.nombre) FROM fabricante WHERE NOT EXISTS (SELECT * FROM producto WHERE producto.codigo_fabricante = fabricante.codigo)

1.1.7.5 Subconsultas correlacionadas

16. SELECT DISTINCT(fabricante.nombre) , producto.nombre , producto.precio FROM fabricante, producto WHERE  producto.codigo_fabricante = fabricante.codigo AND producto.precio IN (SELECT MAX(producto.precio) FROM producto, fabricante WHERE producto.codigo_fabricante = fabricante.codigo GROUP BY fabricante.nombre)

17. SELECT producto.nombre FROM producto , fabricante f WHERE producto.codigo_fabricante = f.codigo AND producto.precio >= (
SELECT AVG(producto.precio) FROM producto, fabricante WHERE producto.codigo_fabricante = fabricante.codigo AND f.nombre LIKE fabricante.nombre)

18. SELECT producto.nombre FROM producto , fabricante f WHERE producto.codigo_fabricante = f.codigo AND producto.precio = ( SELECT MAX(producto.precio) FROM producto, fabricante WHERE producto.codigo_fabricante = fabricante.codigo AND fabricante.nombre LIKE 'Lenovo') 

1.1.8 Subconsultas (En la cláusula HAVING)

7. SELECT DISTINCT(fabricante.nombre) FROM fabricante , producto WHERE fabricante.codigo = producto.codigo_fabricante GROUP BY fabricante.nombre HAVING COUNT(producto.nombre) = (SELECT COUNT(producto.nombre) FROM producto, fabricante WHERE fabricante.codigo = producto.codigo_fabricante AND fabricante.nombre LIKE 'Lenovo') 